"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMiddleware = exports.getTokens = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _axios = _interopRequireDefault(require("axios"));

var HEADERS = ['access-token', 'token-type', 'client', 'expiry', 'uid'];

var setTokens =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(storage, headers) {
    var _i, token;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _i = 0;

          case 1:
            if (!(_i < HEADERS.length)) {
              _context.next = 9;
              break;
            }

            token = HEADERS[_i];
            _axios.default.defaults.headers.common[token] = headers[token];
            _context.next = 6;
            return storage.setItem(token, headers[token]);

          case 6:
            _i++;
            _context.next = 1;
            break;

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function setTokens(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var getTokens =
/*#__PURE__*/
function () {
  var _ref2 = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee2(storage) {
    var headers, _i2, token, t;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            headers = {};
            _i2 = 0;

          case 2:
            if (!(_i2 < HEADERS.length)) {
              _context2.next = 11;
              break;
            }

            token = HEADERS[_i2];
            _context2.next = 6;
            return storage.getItem(token);

          case 6:
            t = _context2.sent;
            headers[token] = t;

          case 8:
            _i2++;
            _context2.next = 2;
            break;

          case 11:
            return _context2.abrupt("return", headers);

          case 12:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function getTokens(_x3) {
    return _ref2.apply(this, arguments);
  };
}();

exports.getTokens = getTokens;

var clearTokens =
/*#__PURE__*/
function () {
  var _ref3 = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee3(storage) {
    var _i3, token;

    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _i3 = 0;

          case 1:
            if (!(_i3 < HEADERS.length)) {
              _context3.next = 8;
              break;
            }

            token = HEADERS[_i3];
            _context3.next = 5;
            return storage.removeItem(token);

          case 5:
            _i3++;
            _context3.next = 1;
            break;

          case 8:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function clearTokens(_x4) {
    return _ref3.apply(this, arguments);
  };
}();

var initMiddleware =
/*#__PURE__*/
function () {
  var _ref4 = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee7() {
    var options,
        defaultStorage,
        defaults,
        settings,
        storage,
        _args7 = arguments;
    return _regenerator.default.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            options = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};

            try {
              defaultStorage = typeof localStorage === 'undefined' ? {} : localStorage;
            } catch (err) {
              defaultStorage = {};
            }

            defaults = {
              authPrefix: '/api/auth',
              signOut: '/sign_out',
              validate: '/validate_token',
              storage: defaultStorage
            };
            settings = (0, _objectSpread2.default)({}, defaults, options);
            storage = settings.storage;

            _axios.default.interceptors.response.use(
            /*#__PURE__*/
            function () {
              var _ref5 = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee4(response) {
                var headers, oldHeaders;
                return _regenerator.default.wrap(function _callee4$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        headers = response.headers;
                        oldHeaders = _axios.default.defaults.headers.common;

                        if (!(headers['access-token'] && headers['access-token'] !== oldHeaders['access-token'])) {
                          _context4.next = 5;
                          break;
                        }

                        _context4.next = 5;
                        return setTokens(storage, headers);

                      case 5:
                        return _context4.abrupt("return", response);

                      case 6:
                      case "end":
                        return _context4.stop();
                    }
                  }
                }, _callee4, this);
              }));

              return function (_x5) {
                return _ref5.apply(this, arguments);
              };
            }(),
            /*#__PURE__*/
            function () {
              var _ref6 = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee5(error) {
                var headers, oldHeaders;
                return _regenerator.default.wrap(function _callee5$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        headers = error.response.headers;
                        oldHeaders = _axios.default.defaults.headers.common;

                        if (!(headers['access-token'] && headers['access-token'] !== oldHeaders['access-token'])) {
                          _context5.next = 5;
                          break;
                        }

                        _context5.next = 5;
                        return setTokens(storage, headers);

                      case 5:
                        return _context5.abrupt("return", Promise.reject(error));

                      case 6:
                      case "end":
                        return _context5.stop();
                    }
                  }
                }, _callee5, this);
              }));

              return function (_x6) {
                return _ref6.apply(this, arguments);
              };
            }());

            _axios.default.interceptors.request.use(
            /*#__PURE__*/
            function () {
              var _ref7 = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee6(request) {
                var _request, url, authPrefix, signOut, validate, authRegex, path, headers, common;

                return _regenerator.default.wrap(function _callee6$(_context6) {
                  while (1) {
                    switch (_context6.prev = _context6.next) {
                      case 0:
                        _request = request, url = _request.url;
                        authPrefix = settings.authPrefix, signOut = settings.signOut, validate = settings.validate;
                        authRegex = new RegExp(authPrefix);

                        if (!authRegex.test(request.url)) {
                          _context6.next = 20;
                          break;
                        }

                        path = url.split(authPrefix)[1];
                        _context6.t0 = path;
                        _context6.next = _context6.t0 === validate ? 8 : _context6.t0 === signOut ? 16 : 19;
                        break;

                      case 8:
                        _context6.next = 10;
                        return getTokens(storage);

                      case 10:
                        headers = _context6.sent;
                        request = (0, _objectSpread2.default)({}, request, headers);
                        common = (0, _objectSpread2.default)({}, request.headers.common, headers);
                        _axios.default.defaults.headers.common = common;
                        request.headers.common = common;
                        return _context6.abrupt("break", 20);

                      case 16:
                        _context6.next = 18;
                        return clearTokens(storage);

                      case 18:
                        return _context6.abrupt("break", 20);

                      case 19:
                        return _context6.abrupt("return", request);

                      case 20:
                        return _context6.abrupt("return", request);

                      case 21:
                      case "end":
                        return _context6.stop();
                    }
                  }
                }, _callee6, this);
              }));

              return function (_x7) {
                return _ref7.apply(this, arguments);
              };
            }(), function (error) {
              return Promise.reject(error);
            });

          case 7:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, this);
  }));

  return function initMiddleware() {
    return _ref4.apply(this, arguments);
  };
}();

exports.initMiddleware = initMiddleware;